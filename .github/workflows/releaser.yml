name: Release

on:
  release:
    types: [published]

env:
  DOCUMENTATION_CNAME: 'pprofizi.github.io/test_CICD'

jobs:

#  Publish_to_TestPyPI:
#    name: Publish to TestPyPI
#    runs-on: ubuntu-latest
#    if: startsWith(github.ref, 'refs/tags/v')
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: "Upload to Public PyPI"
#        run: |
#          pip install twine
#          pip install build
#          python -m build
#          twine upload --skip-existing dist/*
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.TESTPYPI_TOKEN }}

  upload_docs_release:
    name: "Upload stable documentation"
#    needs: [Publish_to_PyPI]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: "Download Release Asset - HTML"
        uses: dsaltares/fetch-gh-release-asset@1.1.0
        with:
          file: HTML-doc.zip
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "List downloaded assets"
        shell: bash
        run: |
          ls

      - name: "Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: HTML-doc.zip
          path: HTML-doc.zip

      - name: "Deploy the stable documentation"
        uses: ansys/actions/doc-deploy-stable@v4
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          doc-artifact-name: HTML-doc.zip
          decompress-artifact: true
